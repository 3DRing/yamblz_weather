import groovy.json.JsonSlurper

def fileName = 'app-credentials.json'
def appStorePassword = (new JsonSlurper().parseText(file(fileName).text)).storePassword
def appKeyAlias = (new JsonSlurper().parseText(file(fileName).text)).keyAlias
def appKeyPassword = (new JsonSlurper().parseText(file(fileName).text)).keyPassword
def apiKey = (new JsonSlurper().parseText(file(fileName).text)).apiKey

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.7.3'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.0'
    defaultConfig {
        applicationId 'tljfn.yamblzweather'
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled false //todo: if set true, databinding will not work
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        release {
            storeFile file('yamblz-weather-keystore.jks')
            keyAlias appKeyAlias
            keyPassword appKeyPassword
            storePassword appStorePassword
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
        dev {
            buildConfigField('String', 'WEATHER_API_KEY',
                    "\"" + (new JsonSlurper().parseText(file('app-credentials.json').text)).apiKey + "\"")
        }
    }
}

dependencies {
    // Debug
    debugCompile "com.facebook.stetho:stetho:$stetho_version"
    debugCompile "com.facebook.stetho:stetho-okhttp3:$stetho_version"
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseCompile "net.igenius:stetho-no-op:$stetho_noop_version"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"

    // Google architecture components
    compile "android.arch.lifecycle:runtime:$arch_version"
    compile "android.arch.lifecycle:extensions:$arch_version"
    compile "android.arch.persistence.room:runtime:$arch_version"
    compile "android.arch.persistence.room:rxjava2:$arch_version"
    annotationProcessor "android.arch.lifecycle:compiler:$arch_version"
    annotationProcessor "android.arch.persistence.room:compiler:$arch_version"

    // Retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // RxJava
    compile "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    compile "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // Dagger
    compile "com.google.dagger:dagger:$dagger_version"
    compile "com.google.dagger:dagger-android:$dagger_version"
    compile "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"

    // UI
    compile "com.android.support:design:$support_version"
    compile "com.android.support:cardview-v7:$support_version"
    compile "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    compile "com.github.bumptech.glide:glide:$glide_version"

    // google places
    compile "com.google.android.gms:play-services-places:$google_places_version"
}
